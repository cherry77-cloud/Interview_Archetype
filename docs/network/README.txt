1. TCP/IP协议族是一个四层协议系统，自底向上分别是数据链路层，网络层，传输层和应用层。每一层完成不同的功能，且通过若干协议来实现，上层协议
使用下层协议提供的服务.
  ◼ 数据链路层实现了网卡接口的网络驱动程序，以处理数据在物理媒介比如以太网，令牌环)上的传输。不同的物理网络具有不同的电气特性，网络驱动
程序隐藏了这些细节，为上层协议提供了一个统一的接口。数据链路层两个最常用的协议是ARP协议和RARP协议。它们实现了IP地址和机器物理地址之间的
相互转换.
  ◼ 网络层实现数据包的选路和转发。网络层对上层协议隐藏了网络拓扑连接的细节，使得在传输层和网络应用程序看来，通信的双方是直接相连的。网络
层最核心的协议是IP协议。IP协议根据数据包的目的IP地址来决定如何投递它。IP协议使用逐跳的方式来确定通信路径。网络层另一个重要的协议是ICMP
协议。它是IP协议的重要补充，主要用于检测网络连接.
  ◼ 传输层为两台主机上的应用程序提供端到端的通信。与网络层使用的逐跳通信方式不同，传输层只关心通信的起始端和目的端，而不在乎数据包的中转
过程。数据链路层(驱动程序)封装了物理网络的电气细节; 网络层封装了网络连接的细节; 传输层则为应用程序封装了一条端到端的逻辑通信链路，
它负责数据的收发，链路的超时重连等。传输层协议主要有三个: TCP协议，UDP协议和SCTP协议.
    ● TCP协议为应用层提供可靠的，面向连接的和基于流的服务。TCP协议使用超时重传，数据确认等方式来确保数据包被正确地发送至目的端，因此
        TCP服务是可靠的。使用TCP协议通信的双方必须先建立TCP连接，并在内核中为该连接维持一些必要的数据结构，比如连接的状态，读写缓冲区，
        以及诸多定时器等。当通信结束时，双方必须关闭连接以释放这些内核数据。TCP服务是基于流的。基于流的数据没有边界限制，它源源不断地
        从通信的一端流入另一端。发送端可以逐个字节的向数据流中写入数据，接收端也可以逐个字节地将它们读出.
    ● UDP协议为应用层提供不可靠，无连接和基于数据报的服务。每个UDP数据报都有一个长度，接收端必须以该长度为最小单位将其所有内容一次性
        读出，否则数据将被截断.
    ● SCTP协议是一种相对较新的传输层协议，它是为了在因特网上传输电话信号而设计的.
◼ 应用层负责处理应用程序的逻辑，数据链路层，网络层和传输层负责处理网络通信细节，这部分必须既稳定又高效，因此它们都在内核空间中实现。
而应用层则在用户空间实现，因为它负责处理众多逻辑，比如文件传输，名称查询和网络管理等。
    ● ping是应用程序，而不是协议，它利用ICMP报文检测网络连接，是调试网络环境的必备工具.
    ● telnet协议是一种远程登录协议，它使我们能在本地完成远程任务.
    ● OSPF协议是一种动态路由更新协议，用于路由器之间的通信，以告知对方各自的路由信息.
    ● DNS协议提供机器域名到IP地址的转换.
    ● 应用层协议(或程序)可能跳过传输层直接使用网络层提供的服务，比如ping程序和OSPF协议。应用层协议(或程序)既可以使用TCP服务，
    又可以使用UDP协议，比如DNS协议。我们可以通过/etc/services文件查看所有知名的应用层协议，以及它们都能使用哪些传输层服务.


2. 应用程序数据在发送到物理网络上之前，将沿着协议从上往下依次传递。每层协议都将在上层数据的基础上加上自己的头部信息(有时还包括尾部信息)，
以实现该层的功能，这个过程就称为封装.
  ◼ 经过TCP封装后的数据称为TCP报文段，或者简称TCP报文段。TCP协议为通信双方维持一个连接，并且在内核中存储相关数据。这部分数据中的TCP头部
信息和TCP内核缓冲区数据一起构成了TCP报文段.
  ◼ 经过UDP封装后的数据称为UDP数据报。UDP对应用程序数据的封装与TCP类似。不同的是，UDP无须为应用层数据保存副本，因为它提供的服务是不可靠
的。当一个UDP数据报被成功发送之后，UDP内核缓冲区中的该数据报就被丢弃了。如果应用程序检测到该数据报未能被接收端正确接收，并打算重发这个
数据报，则应用程序需要重新从用户空间将该数据报拷贝到UDP内核发送缓冲区中.
  ◼ 经过IP封装后的数据称为IP数据报。IP数据报也包括头部信息和数据部分，其中数据部分就是一个TCP报文段，UDP数据报或者ICMP报文.
  ◼ 经过数据链路层封装的数据称为帧。传输媒介不同，帧的类型也不同。比如，以太网上传输的是以太网帧，而令牌环网络上传输的则是令牌环帧.
  ◼ 帧的最大传输单元，即帧最多能携带多少上层协议数据(比如IP数据报)，通常受到网络类型的限制。帧才是最终在物理网络上传送的字节序列。至此，
封装过程完成.
