1. HTTP代理服务器的工作原理
◼ 在HTTP通信链上，客户端和目标服务器之间通常存在某些中转代理服务器，它们提供对目标资源的中转访问。一个HTTP请求可能被多个代理服务器转发。
代理服务器按照其使用方式和作用，分为正向代理服务器，反向代理服务器和透明代理服务器.
◼ 正向代理要求客户端自己设置代理服务器的地址。客户的每次请求都将直接发送到该代理服务器。并由代理服务器来请求目标资源。比如处于防火墙内的
局域网机器要访问Internet，或者访问一些被屏蔽掉的国外网站，就需要使用正向代理服务器.
◼ 反向代理被设置在服务器端，因而客户端无须进行任何设置。反向代理是指用代理服务器来接收Internet上的连接请求，然后将请求转发给内部网络上的
服务器，并将从内部服务器上得到的结果返回给客户端。这种情况下，代理服务器对外就表现为一个真实的服务器。各大网站通常分区域设置了多个代理服务
器，所以在不同的地方ping同一个域名可能得到不同的IP地址，因为这些IP地址实际上是代理服务器的IP地址.
◼ 透明代理只能设置在网关上。用户访问Internet的数据报必然经过网关，如果在网关上设置代理，则该代理对用户来说显然是透明的。透明代理可以看作
正向代理的一种特殊情况.
◼ 代理服务器通常还提供缓存目标资源的功能，这样用户下次访问同一资源时速度将很快。优秀的开源软件squid，varnish都是提供了缓存能力的代理服务
器软件，其中squid支持所有代理方式，而varnish仅能用作反向代理.


2. 本地名称查询
◼ IP头部的源端IP地址和目的端IP地址在转发过程中是始终不变的(一种例外是源路由选择)。但帧头部的源端物理地址和目的端物理地址在转发过程中则是
一直在变化的.
◼ 一般来说，通过域名来访问Internet上的某台机器时，需要使用DNS服务来获取该主机的IP地址。但如果我们通过主机名来访问本地局域网上的机器，则可
通过本地的静态文件来获得该机器的IP地址.
◼ Linux将目标主机名及其对应的IP地址存储在/etc/hosts配置文件中。当需要查询某个主机名对应的IP地址时，程序将首先检查这个文件.
◼ 如果程序在/etc/hosts文件中未找到目标机器名对应的IP地址，它将求助于DNS服务。
◼ 用户可以通过修改/etc/host.conf文件来自定义系统解析主机名的方法和顺序(一般是访问本地文件/etc/hosts，再访问DNS服务)
        order hosts, bind
        multi on
    ● 其中第一行表示优先使用/etc/hosts文件来解析主机名，失败后再使用DNS服务(bind)。第二行表示如果/etc/hosts文件中一个主机名对应多个IP
      地址，那么解析的结果就包含多个IP地址。
◼ 标准文档RFC 1123指出，网络上的主机都应该实现一个简单的本地名称查询服务.
