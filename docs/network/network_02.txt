1. IP协议是TCP/IP协议的核心，也是socket网络编程的基础之一.
◼ IP头部信息: IP头部信息出现在每个IP数据报中，用于指定IP通信的源端IP地址，目的端IP地址，指导IP分片和重组，以及指定部分通信行为.
◼ IP数据报的路由和转发: IP数据报的路由和转发发生在除目标机器之外的所有主机和路由器上。它们决定数据报是否应该转发以及如何转发.


2. IP协议是TCP/IP协议族的动力，它为上层协议提供无状态，无连接，不可靠的服务.
◼ 无状态是指IP通信双方不同步传输数据的状态信息，因此所有IP数据报的发送，传输和接收都是相互独立，没有上下文关系的。这种服务最大的缺点
是无法处理乱序和重复的IP数据报.
◼ 无状态服务的优点也很明显: 简单，高效。我们无须为保持通信的状态而分配一些内核资源，也无须每次传输数据时都携带状态信息。在网络协议中，
无状态是很常见的，比如UDP协议和HTTP协议都是无状态协议。以HTTP协议为例，一个浏览器的连续两次网页请求之间没有任何关联，它们将被Web服务器
独立地处理.
◼ 无连接是指IP通信双方都不长久地维持对方的任何信息。这样，上层协议每次发送数据的时候，都必须明确指定对方的IP地址.
◼ 不可靠是指IP协议不能保证IP数据报准确地到达接收端，它只是承诺尽最大努力.


3. IP分片
◼ 当IP数据报的长度超过帧的MTU时，它将被分片传输。分片可能发生在发送端，也可能发生在中转路由器上，而且可能在传输过程中被多次分片，
但只有在最终的目标机器上，这些分片才会被内核中的IP模块重新组装.
◼ IP头部中的如下三个字段给IP的分片和重组提供了足够的信息: 数据报标识，标志和片偏移。一个IP数据报的每个分片都具有自己的IP头部，它们
具有相同的标识值，但具有不同的片偏移。并且除了最后一个分片外，其他分片都将设置MF标志。此外，每个分片的IP头部的总长度字段将被设置为该
分片的长度.
◼ 最后，IP层传递给数据链路层的数据可能是一个完整的IP数据报，也可能是一个IP分片，它们统称为IP分组(packet).


4. IP协议的一个核心任务是数据报的路由，即决定发送数据报到目标机器的路径.
◼ 可以使用route命令或netstat命令查看路由表.
◼ 路由机制
    ● 查找路由表中和数据报的目标IP地址完全匹配的主机IP地址。如果找到，就使用该路由项; 没找到则转步骤2.
    ● 查找路由表中和数据报的目标IP地址具有相同网络ID的网络IP地址，如果找到，就使用该路由项; 没找到则转步骤3.
    ● 选择默认路由项，这通常意味着数据报的下一跳路由是网关.
◼ 路由表必须能够更新，以反映网络连接的变化，这样IP模块才能准确，高效地转发数据报。route命令可以修改路由表.
◼ 通过route命令或其他工具手工修改路由表，是静态的路由更新方式。对于大型的路由器，它们通常通过BGP，RIP，OSPF等协议来发现路径，
并更新自己的路由表。这种更新方式是动态的，自动的.
◼ ICMP重定向报文也能用于更新路由表. 一般来说，主机只能接收ICMP重定向报文，而路由器只能发送ICMP重定向报文.


5. IP转发
◼ 不是发送给本机的IP数据报将由数据报转发子模块来处理。路由器都能执行数据报的转发操作，而主机一般只发送和接收数据报，
这是因为主机上/proc/sys/net/ipv4/ip_forward内核参数默认被设置为0。我们可以通过修改它来使用主机的数据报转发功能.  
        echo 1 > /proc/sys/net/ipv4/ip_forward
◼ 对于允许IP数据报转发的系统(主机或路由表)，数据报转发子模块对期望转发的数据报执行如下操作:
    ● 检查数据报头部的TTL值。如果TTL值已经是0，则丢弃该数据报.
    ● 查看数据报头部的严格源路由选择表项。如果该选项被设置，则检测数据报的目标IP地址是否是本机的某个IP地址。如果不是，
      则发送一个ICMP源站选路失败报文给发送端.
    ● 如果有必要，则给源端发送一个ICMP重定向报文，以告诉它一个更合理的下一跳路由器.
    ● 将TTL值减1.
    ● 处理IP头部选项.
    ● 如果有必要，则执行IP分片操作.
◼ IPv6协议并不是IPv4协议的简单扩展，而是完全独立的协议。用以太网帧封装的IPv6数据报和IPv4数据报具有不同的类型值。
IPv4数据报的以太网帧封装类型值是0x800，而IPv6数据报的以太网帧封装类型值是0x86dd.
