1. OSI(Open System Interconnection)模型
    OSI模型，即开放式系统互联，是国际标准化组织(ISO)制定的⼀个用于计算机或通信系统间互联的标准体系，旨在将计算机网络通信划分为七个不同的层级，
每个层级都负责特定的功能。每个层级都构建在其下方的层级之上，并为上方的层级提供服务。七层从下到上分别是物理层，数据链路层，⽹络层，传输层，
会话层，表示层和应用层。
★ 物理层: 负责在物理传输媒介上传输比特流，将逻辑信号转换为物理信号进行传送。数据在这里以比特(bits)为传输单位，通过电缆，光纤或无线信道
等媒介进行传递。
★ 数据链路层: 负责建立逻辑链接，处理硬件地址寻址(MAC地址)，差错检测与纠正，以及对物理介质访问进行控制。在物理层的比特流基础上，将数据组装成帧
进行传输，并根据MAC地址来确定帧在局域网中的传输方向。通过差错检测(例如CRC校验)来确保帧的完整性，并进行重传或纠错。
    ◼ 以太网(Ethernet)协议，PPP(点对点协议)，HDLC，MAC层控制协议等
    ◼ 以太网帧头部携带源MAC地址，目的MAC地址等信息
★ 网络层: 负责进行逻辑地址寻址，选择最佳路由并将数据包从源端主机传输到目标主机；这层使用IP地址来标识不同主机和网络，并通过路由算法在不同网络
之间进行数据转发；在复杂的网络中，网络层会维护路由表，通过动态或静态的方式更新到达不同网络的路径。
    ◼ 传输单位: 数据包 / 数据报(Packet / Datagram)
    ◼ IP(Internet Protocol): 最核心的网络层协议，用于给网络中的设备分配IP地址，并负责将数据包转发到正确的网络
    ◼ ICMP(Internet Control Message Protocol): 用于发送错误报告和网络诊断，例如 ping 命令就依赖 ICMP
    ◼ ARP(Address Resolution Protocol): 将IP地址映射到MAC地址，常见于以太网局域网中。
    ◼ RARP(Reverse ARP), OSPF, BGP等也是网络层相关协议
★ 传输层: 提供端到端的可靠或不可靠的数据传输服务，即在源端与目标端的进程之间传递数据。负责分段，重组，流量控制，差错检测及数据的纠错重传
等(视不同协议而定)。为上层屏蔽底层数据传输的具体细节，仅提供一个逻辑上的管道来收发数据。
    ◼ TCP(Transmission Control Protocol，传输控制协议): 面向连接，可靠传输，具有三次握手、四次挥手、流量控制、拥塞控制等机制。
        适用于需要数据完整可靠的场景，如文件传输、邮件、网页浏览等。
    ◼ UDP(User Datagram Protocol，用户数据报协议): 无连接的、不保证可靠传输，但效率更高，适合对实时性要求高且可容忍一定丢包的场景，
        如视频直播、语音通话、实时游戏等。
★ 会话层: 负责在应用程序之间建立、管理和终止会话(Session); 维护应用程序之间的数据交互会话状态，处理会话断开或异常的恢复。
★ 表示层: 负责数据的格式转换、加密与解密、压缩与解压等，确保不同系统之间能够正确地识别对方的数据格式。处理字符编码、数据结构、图像格式、
声音格式等，将数据翻译成对等端能够理解的形式。
★ 应⽤层: ⽹络服务与最终⽤户的⼀个接⼝。这⼀层为⽤户的应⽤程序(例如电⼦邮件、⽂件传输和终端仿真)提供⽹络服务。
常⻅的协议有：FTP、SMTP、HTTP、DNS。


2. TCP/IP四层网络模型 
    TCP/IP模型是⼀种用于组织和描述计算机⽹络通信的标准模型，它是互联⽹最常用的协议栈。TCP/IP模型由两个主要协议组成：TCP和IP。它是互联⽹
通信的基础，也被⼴泛⽤于局域网和⼴域网等各种⽹络环境。TCP/IP模型分为四个层级，每个层级负责特定的网络功能。
以下是TCP/IP模型的层级及其功能:
★ 应用层: 该层与OSI模型的应⽤层和表示层以及会话层类似，提供直接与⽤户应用程序交互的接口。它为网络上的各种应⽤程序提供服务，
如电⼦邮件(SMTP)，⽹⻚浏览(HTTP)，⽂件传输(FTP)等。
★ 传输层: 该层对应OSI模型的传输层。它负责端到端的数据传输，提供可靠的，无连接的数据传输服务。主要的传输层协议有TCP和UDP。
TCP提供可靠的数据传输，确保数据的正确性和完整性；⽽UDP则是⽆连接的，适⽤于不要求可靠性的传输，如实时音频和视频流。
★ 网际层: 该层对应OSI模型的⽹络层。主要协议是IP，它负责数据包的路由和转发，选择最佳路径将数据从源主机传输到⽬标主机。IP协议使⽤
IP地址来标识主机和⽹络，并进⾏逻辑地址寻址。
★ 网络接口层: 该层对应OSI模型的数据链路层和物理层。它负责物理传输媒介的传输，例如以太⽹，Wi-Fi等，并提供错误检测和纠正的功能。
此外，⽹络接口层还包含硬件地址(MAC地址)的管理。


3. 五层网络体系结构 
    五层网络体系结构是综合了OSI模型和TCP/IP模型所得来的。五层网络体系结构分别为: 应⽤层，运输层，⽹络层，数据链路层，
物理层。各层功能分别如下:
★ 应用层: 与直接为用户的应用进程提供服务，是操作系统中的用户态，常见的有支持万维⽹应⽤的HTTP协议，⽀持电⼦邮件的SMTP协议，
支持文件传送的FTP协议等。
★ 传输层: 负责向两个主机中进程之间的通信提供服务，是端(端⼝)到端的通信。传输层有两个传输协议。
    TCP: ⾯向连接的，可靠的传输控制协议
    UDP: 无连接的，不提供可靠服务的用户数据报协议
★ 网络层: 负责数据的路由和转发。它选择最佳路径将数据从源主机传输到目标主机，并使⽤逻辑地址(如IP地址)来标识主机和⽹络。
★ 数据链路层: 在直连网络中传输数据帧。它提供错误检测和纠正的功能，并负责数据的帧同步，地址寻址和流量控制。在这⼀层级上，
    通常会使⽤MAC地址来标识⽹络设备。
★ 物理层: 负责物理传输媒介的传输。这包括电缆、光纤、无线信号等。该层级定义了传输数据位的形式，电压级别，传输速率等特性。


4. 从输⼊URL到页面展示发生了什么？
◼ URL输⼊: 用户在浏览器的地址栏中输⼊URL。
◼ 域名解析: 浏览器通过域名系统(DNS)将域名解析为IP地址，以确定要连接的服务器位置。
◼ 建⽴连接: 浏览器使⽤解析得到的IP地址，与服务器建⽴网络连接。这通常涉及使⽤TCP协议进⾏三次握手。
◼ 发送请求: 浏览器向服务器发送HTTP请求，请求服务器的网页内容。请求中包含了要访问的路径，方法(GET, POST等)，头部信息等。
◼ 服务器处理: 服务器接收到请求后，根据请求的内容和路径，处理请求并返回响应。服务器可能从数据库中获取数据，⽣成动态内容，
然后将响应发送回浏览器。
◼ 接收响应：浏览器接收到服务器的响应，响应包含了HTTP状态码，头部信息和页面内容等。
◼ 解析和渲染: 浏览器开始解析响应内容，构建文档对象模型(DOM)和渲染树。它解析HTML，CSS和JavaScript，
并确定页面的结构、样式和行为。
◼ 页面渲染: 浏览器使⽤渲染树和样式信息，将页面内容绘制到屏幕上。这包括布局、绘制和显示页面元素。
◼ 执行JavaScript: 如果页面包含 JavaScript，浏览器会执⾏ JavaScript 代码，添加交互和动态行为。
◼ 加载资源: 页面中可能包含外部资源，如图⽚、样式表、脚本⽂件等。浏览器会根据需要下载这些资源，以完整地呈现页面。
◼ 完成页面加载：页面的所有内容和资源加载完成后，浏览器显示完整的页面。
