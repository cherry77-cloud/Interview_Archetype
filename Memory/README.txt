1. 进程虚拟地址空间布局
◼ Text段: 
    ● 包含程序的可执行代码以及只读常量等。
    ● 由于程序代码通常不需要修改，操作系统会将该区域映射为只读，并且可以实现共享(多个进程运行同一份代码时共用一块物理内存)
◼ Data段: 
    ● 存放已初始化的全局变量和静态变量; 
    ● 该区域在编译链接时已知大小，并且存储在可执行文件中
◼ BSS段: 
    ● 用于存放未初始化的全局/静态变量; 
    ● 该区域在编译链接时仅保留大小信息，运行时才被真正分配并清零，故在可执行文件中不会占据实际存储空间
◼ Heap: 
    ● 由动态分配内存（如 malloc、new）使用，堆空间向高地址增长。
    ● 程序运行时可以自由扩展或收缩堆空间(通过系统调用如 brk、sbrk 或更常见的 mmap 方式实现)
◼ 文件映射区: 
    ● 包含动态链接库(共享库)的映射区域和其他由 mmap 系统调用映射的内存区域(如内存映射文件、匿名映射等)
◼ Stack: 
    ● 存放函数调用时的局部变量、返回地址、函数参数等信息，通常向低地址方向扩展
◼ 内核空间: 
    ● 在用户态中不可直接访问内核空间(受操作系统保护)
